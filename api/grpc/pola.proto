// Copyright (c) 2022 NTT Communications Corporation
//
// This software is released under the MIT License.
// see https://github.com/nttcom/pola/blob/main/LICENSE

syntax = "proto3";

package pb;

option go_package = "github.com/nttcom/pola/api/grpc";

import "google/protobuf/empty.proto";

service PceService {
  rpc CreateSrPolicy (CreateSrPolicyInput) returns (SrPolicyStatus) {};

  rpc CreateSrPolicyWithoutLinkState (CreateSrPolicyInput) returns (SrPolicyStatus) {};

  rpc GetPeerAddrList (google.protobuf.Empty) returns (PeerAddrList) {};

  rpc GetSrPolicyList (google.protobuf.Empty) returns (SrPolicyList) {};

  rpc GetTed (google.protobuf.Empty) returns (Ted) {};
}

message Segment {
    uint32 sid = 1;
    bytes loAddr = 2;
}

enum SrPolicyType {
    EXPLICIT = 0;
    DYNAMIC = 1;
}

message SrPolicy {
    bytes pcepSessionAddr = 1;
    bytes srcAddr = 2;
    bytes dstAddr = 3;
    string srcRouterId = 4;
    string dstRouterId = 5;
    uint32 color = 6;
    uint32 preference = 7;
    string policyName = 8;
    SrPolicyType type = 9;
    repeated Segment segmentList = 10;
    MetricType metric = 11;
}

message CreateSrPolicyInput {
    SrPolicy srPolicy = 1;
    uint32 asn = 2;
} 

message SrPolicyStatus {
    bool isSuccess = 1;
}

message PeerAddrList {
    repeated bytes PeerAddrs = 1; 
}

message SrPolicyList {
    repeated SrPolicy SrPolicies = 1;
}

message LsPrefix {
    string prefix = 1;
    uint32 sid_index = 2;
}

enum MetricType {
    IGP = 0;
    TE = 1;
    DELAY = 2;
    HOPCOUNT = 3;
}

message Metric {
    MetricType type = 1;
    uint32 value = 2;
}

message LsLink {
    string local_router_id = 1;
    uint32 local_asn = 2;
    string local_ip = 3;
    string remote_router_id = 4;
    uint32 remote_asn = 5;
    string remote_ip = 6;
    repeated Metric metrics = 7;
    uint32 adj_sid = 8;
} 

message LsNode {
    uint32 asn = 1;
    string router_id = 2;
    string isis_area_id = 3;
    string hostname = 4;
    uint32 srgb_begin = 5;
    uint32 srgb_end = 6;
    repeated LsLink ls_links = 7;
    repeated LsPrefix ls_prefixes = 8;
}


message Ted {
    bool enable = 1;
    repeated  LsNode ls_nodes = 2;
}
